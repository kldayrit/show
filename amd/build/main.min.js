define("block_tulad/main",["jquery"],(function($){const stopWords=["the","is","in","a","an","at","from"];function tokenize(text){return text.toLowerCase().match(/\b\w+\b/g).filter((word=>!stopWords.includes(word)))}function calculateTF(document){const wordFrequency={},words=tokenize(document);for(const word of words)wordFrequency[word]=(wordFrequency[word]||0)+1;const totalWords=words.length,tf={};for(const word in wordFrequency)tf[word]=wordFrequency[word]/totalWords;return tf}function calculateTFIDF(tf,idf){const tfidf={};for(const word in tf)tfidf[word]=tf[word]*idf[word];return tfidf}function vectorMagnitude(vector){let sumOfSquares=0;for(const word in vector)sumOfSquares+=vector[word]**2;return Math.sqrt(sumOfSquares)}function cosineSimilarity(documentA,documentB,idf){const tfA=calculateTF(documentA),tfB=calculateTF(documentB),tfidfA=calculateTFIDF(tfA,idf),tfidfB=calculateTFIDF(tfB,idf);return function(vectorA,vectorB){let product=0;for(const word in vectorA)vectorB.hasOwnProperty(word)&&(product+=vectorA[word]*vectorB[word]);return product}(tfidfA,tfidfB)/(vectorMagnitude(tfidfA)*vectorMagnitude(tfidfB))}function compareTwoStrings(first,second){if((first=first.replace(/\s+/g,""))===(second=second.replace(/\s+/g,"")))return 1;if(first.length<2||second.length<2)return 0;let firstBigrams=new Map;for(let i=0;i<first.length-1;i++){const bigram=first.substring(i,i+2),count=firstBigrams.has(bigram)?firstBigrams.get(bigram)+1:1;firstBigrams.set(bigram,count)}let intersectionSize=0;for(let i=0;i<second.length-1;i++){const bigram=second.substring(i,i+2),count=firstBigrams.has(bigram)?firstBigrams.get(bigram):0;count>0&&(firstBigrams.set(bigram,count-1),intersectionSize++)}return 2*intersectionSize/(first.length+second.length-2)}function findBestMatch(mainString,targetStrings){if(!function(mainString,targetStrings){if("string"!=typeof mainString)return!1;if(!Array.isArray(targetStrings))return!1;if(!targetStrings.length)return!1;if(targetStrings.find((function(s){return"string"!=typeof s})))return!1;return!0}(mainString,targetStrings))throw new Error("Bad arguments: First argument should be a string, second should be an array of strings");const ratings=[];let bestMatchIndex=0;for(let i=0;i<targetStrings.length;i++){const currentTargetString=targetStrings[i],currentRating=compareTwoStrings(mainString,currentTargetString);ratings.push({target:currentTargetString,rating:currentRating}),currentRating>ratings[bestMatchIndex].rating&&(bestMatchIndex=i)}return{ratings:ratings,bestMatch:ratings[bestMatchIndex],bestMatchIndex:bestMatchIndex}}return{initialize:function(){$(".check").bind("click",(function(){var textArray=$(this).attr("value").split("||"),selected=textArray[0];textArray.shift();var compare=findBestMatch(textArray[selected],textArray.filter((function(x){return textArray.indexOf(x)!=selected}))).ratings;$("tr").css("background-color",""),$("."+selected).css("background-color",""),$("#"+selected).closest("tr").css("background-color","rgb(219, 255, 219)");for(let i=0;i<textArray.length;i++)$("."+i).html("--");compare.forEach((function(item){item.rating>.6?$("."+textArray.indexOf(item.target)).css("background-color","rgb(255, 189, 182)"):$("."+textArray.indexOf(item.target)).css("background-color",""),$("."+textArray.indexOf(item.target)).html(Math.round(100*item.rating*100)/100+"% similar")}));const idf=function(textArray){const documentFrequency={},totalDocuments=textArray.length;for(const document of textArray){const words=tokenize(document);for(const word of words)documentFrequency[word]=(documentFrequency[word]||0)+1}const idf={};for(const word in documentFrequency)idf[word]=Math.log(totalDocuments/(documentFrequency[word]+1));return idf}(textArray),documentA=textArray[selected];for(let j=0;j<textArray.length;j++){if($(".sem"+j).css("background-color",""),j==selected){$(".sem"+j).html("--");continue}const similarity=cosineSimilarity(documentA,textArray[j],idf);isNaN(similarity)&&(similarity=0),similarity>.6&&$(".sem"+j).css("background-color","rgb(255, 189, 182)"),$(".sem"+j).html(Math.round(100*similarity*100)/100+"% similar")}}))}}}));

//# sourceMappingURL=main.min.js.map